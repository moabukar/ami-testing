{
    "variables": {
     "source_ami_id": "ami-ee6a718a",
     "version": "1.019",
     "tag_application": "Demo-linux",
     "tag_ami_type": "docker_base"
    },
    "builders": [{
     "type": "amazon-ebs",
     "region": "eu-west-2",
     "source_ami": "{{user `source_ami_id`}}",
     "instance_type": "m4.large",
     "ssh_username": "centos",
     "ami_name": "HCP-Linux-AMI-{{user `version`}}",
     "ena_support": "true",
     "tags": {
       "Name": "HCP-Linux-AMI",
       "Version": "{{user `version`}}",
       "Source_AMI": "{{user `source_ami_id`}}",
       "Environment": "aws-docker-demo",
       "Service_Role": "HCP"
     },
     "run_tags": {
       "Application": "{{user `tag_application`}}",
       "AMI_Type": "{{user `tag_ami_type`}}",
       "Name": "HCP-Linux-AMI",
       "Version": "{{user `version`}}",
       "Source_AMI": "{{user `source_ami_id`}}",
       "Service_Role": "HCP",
       "cdg_bootstrap": "false",
       "cdg_noreboot": "true"
     },
     "run_volume_tags": {
       "Application": "{{user `tag_application`}}",
       "AMI_Type": "{{user `tag_ami_type`}}",
       "Name": "HCP-Linux-AMI",
       "Version": "{{user `version`}}",
       "Source_AMI": "{{user `source_ami_id`}}",
       "Service_Role": "HCP"
     },
 
 
    "launch_block_device_mappings": [{
     "device_name": "/dev/sda1",
     "volume_size": 20,
     "volume_type": "gp2",
     "delete_on_termination": true
    },
    {
     "device_name": "/dev/sdf",
     "volume_size": 5,
     "encrypted": true,
     "volume_type": "gp2",
     "delete_on_termination": true
    },
    {
     "device_name": "/dev/sdg",
     "volume_size": 50,
     "encrypted": true,
     "volume_type": "gp2",
     "delete_on_termination": true
    }
    ]}
  ],
 
   "provisioners": [
 
        {
        "type": "shell",
        "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
        "inline": [
          "set -e",
          "mkdir /logs",
          "mkdir /var/lib/docker",
          "echo \"root soft nofile 65536\" >> /etc/security/limits.conf",
          "echo \"root hard nofile 65536\" >> /etc/security/limits.conf",
          "echo \"* soft nofile 65536\" >> /etc/security/limits.conf",
          "echo \"* hard nofile 65536\" >> /etc/security/limits.conf",
          "echo \"net.core.somaxconn = 1024\" >> /etc/sysctl.conf",
          "echo \"net.core.netdev_max_backlog = 5000\" >> /etc/sysctl.conf",
          "echo \"net.core.rmem_max = 16777216\" >> /etc/sysctl.conf",
          "echo \"net.core.wmem_max = 16777216\" >> /etc/sysctl.conf",
          "echo \"net.ipv4.tcp_wmem = 4096 12582912 16777216\" >> /etc/sysctl.conf",
          "echo \"net.ipv4.tcp_rmem = 4096 12582912 16777216\" >> /etc/sysctl.conf",
          "echo \"net.ipv4.tcp_max_syn_backlog = 8096\" >> /etc/sysctl.conf",
          "echo \"net.ipv4.tcp_slow_start_after_idle = 0\" >> /etc/sysctl.conf",
          "echo \"net.ipv4.tcp_tw_reuse = 1\" >> /etc/sysctl.conf",
          "echo \"net.ipv4.ip_local_port_range = 10240 65535\" >> /etc/sysctl.conf",
          "reboot"
        ],
        "expect_disconnect": true
    },
    {
    "type": "shell",
    "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
    "inline": [
      "set -e",
      "sleep 30",
      "mkdir /build",
      "systemctl disable chronyd",
      "yum makecache fast",
      "yum update -y",
      "echo '[treasuredata]' > /etc/yum.repos.d/td.repo",
      "echo 'name=TreasureData' >> /etc/yum.repos.d/td.repo",
      "echo 'baseurl=http://packages.treasuredata.com/3/redhat/$releasever/$basearch' >> /etc/yum.repos.d/td.repo",
      "echo 'gpgcheck=1' >> /etc/yum.repos.d/td.repo",
      "echo 'gpgkey=https://packages.treasuredata.com/GPG-KEY-td-agent' >> /etc/yum.repos.d/td.repo",
      "yum install epel-release ansible wget yum-utils device-mapper-persistent-data lvm2 bind-utils td-agent -y",
      "yum install python-pip -y",
      "yum install jq -y",
      "yum install -y awscli",
      "sudo -E sh -c 'echo \"https://storebits.docker.com/ee/centos/sub-8633ad08-d394-4126-8081-f6bb81e1852e/centos\" > /etc/yum/vars/dockerurl'",
      "sudo -E yum-config-manager --add-repo \"https://storebits.docker.com/ee/centos/sub-8633ad08-d394-4126-8081-f6bb81e1852e/centos/docker-ee.repo\"",
      "yum install -y docker-ee",
      "reboot"
    ],
    "expect_disconnect": true,
    "pause_before": "3m"
    },
    {
    "type": "file",
    "source": "linux/assets/daemon.json",
    "destination": "/tmp/daemon.json",
    "pause_before": "1m"
    },
 
    {
    "type": "file",
    "source": "linux/assets/td-agent.conf",
    "destination": "/tmp/td-agent.conf"
    },
    {
    "type": "file",
    "source": "linux/assets/td-agent.logrotate",
    "destination": "/tmp/td-agent.logrotate"
    },
    {
    "type": "file",
    "source": "linux/assets/docker-logs.logrotate",
    "destination": "/tmp/docker-logs.logrotate"
    },
    {
    "type": "file",
    "source": "linux/assets/ucpbackup.sh",
    "destination": "/tmp/ucpbackup.sh"
    },
    {
    "type": "file",
    "source": "linux/assets/docker_subscription.lic",
    "destination": "/tmp/docker_subscription.lic"
    },
    {
    "type": "file",
    "source": "linux/assets/dtrbackup.sh",
    "destination": "/tmp/dtrbackup.sh"
    },
    {
        "type": "shell",
        "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
        "inline": [
          "set -e",
          "sleep 240",
          "systemctl enable td-agent",
          "mkdir /etc/docker",
          "mv /tmp/daemon.json /etc/docker/daemon.json",
          "mv /tmp/td-agent.conf /etc/td-agent/td-agent.conf",
          "mv /tmp/td-agent.logrotate /etc/logrotate.d/td-agent",
          "mv /tmp/docker-logs.logrotate /etc/logrotate.d/docker-logs",
          "chmod 644 /etc/logrotate.d/td-agent",
          "chown root:root /etc/logrotate.d/td-agent",
          "chmod 644 /etc/logrotate.d/docker-logs",
          "chown root:root /etc/logrotate.d/docker-logs",
          "mv /tmp/ucpbackup.sh /etc/docker/ucpbackup.sh",
          "mv /tmp/dtrbackup.sh /etc/docker/dtrbackup.sh",
          "chmod 755 /etc/docker/*.sh",
          "systemctl enable docker",
          "systemctl start docker",
          "wget https://packages.docker.com/caas/ucp_images_3.0.4.tar.gz -O /tmp/ucp.tar.gz",
          "wget https://packages.docker.com/caas/dtr_images_2.5.6.tar.gz -O /tmp/dtr.tar.gz",
          "docker load < /tmp/ucp.tar.gz",
          "docker load < /tmp/dtr.tar.gz"
        ]
        }
  ]
  }
 